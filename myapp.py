# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OhOsupikopF6BVLrcQfL1z6lHjEXTwa6
"""

# Data handling
import pandas as pd
import numpy as np

# Bokeh libraries
from bokeh.io import output_file, output_notebook
from bokeh.io import show
from bokeh.plotting import figure, show
from bokeh.layouts import row, column, gridplot
from bokeh.models.widgets import Tabs, Panel
from bokeh.models import Slider, Select
from bokeh.models import CategoricalColorMapper
from bokeh.palettes import Spectral6
from bokeh.models import ColumnDataSource, CDSView, GroupFilter, CustomJS, Select, Range1d, Dropdown
from bokeh.models import HoverTool


df_covid = pd.read_csv('dataset.csv')
df_covid.info()

df_covid = pd.read_csv('dataset.csv', parse_dates=['Date'])
df_covid.info()

df_covid.head()

df_covid.shape

print("Before Delete Duplicate: ",len(df_covid))
print("After Delete Duplicates: ",len(df_covid.drop_duplicates()))

miss_values = df_covid.isnull().sum()
miss_values

df_covid.Location.unique()

df_covid.rename(columns={'Total Active Cases':'Total_Active_Cases'}, inplace=True)

df_covid.rename(columns={'Total Deaths':'Total_Deaths'}, inplace=True)
df_covid.rename(columns={'New Cases':'New_Cases'}, inplace=True)

output_file('no1.html', title='hasil visualisasi')

covid_cds = ColumnDataSource(df_covid)

DKI_Jakarta = df_covid[df_covid['Location'] == 'DKI Jakarta']
DKI_Jakarta_cds = ColumnDataSource(DKI_Jakarta)

Jawa_Barat = df_covid[df_covid['Location'] == 'Jawa Barat']
Jawa_Barat_cds = ColumnDataSource(Jawa_Barat)

Daerah_Istimewa_Yogyakarta = df_covid[df_covid['Location'] == 'Daerah Istimewa Yogyakarta']
Daerah_Istimewa_Yogyakarta_cds = ColumnDataSource(Daerah_Istimewa_Yogyakarta)

Riau = df_covid[df_covid['Location'] == 'Riau']
Riau_cds = ColumnDataSource(Riau)

Banten = df_covid[df_covid['Location'] == 'Banten']
Banten_cds = ColumnDataSource(Banten)

Kalimantan_Timur = df_covid[df_covid['Location'] == 'Kalimantan Timur']
Kalimantan_Timur_cds = ColumnDataSource(Kalimantan_Timur)

#create view
# DKI_Jakarta = df_covid[df_covid['Location'] == 'DKI Jakarta']
# DKI_Jakarta_cds = ColumnDataSource(DKI_Jakarta)
# DKI_Jakarta = df_covid[df_covid['Location'] == 'DKI Jakarta']
# DKI_Jakarta_cds = ColumnDataSource(DKI_Jakarta)
# DKI_Jakarta = df_covid[df_covid['Location'] == 'DKI Jakarta']
# DKI_Jakarta_cds = ColumnDataSource(DKI_Jakarta)
# DKI_Jakarta = df_covid[df_covid['Location'] == 'DKI Jakarta']
# DKI_Jakarta_cds = ColumnDataSource(DKI_Jakarta)

#create views
DKI_Jakarta_view = CDSView(source = covid_cds, filters=[GroupFilter(column_name='Location',group='DKI Jakarta')])
Jawa_Barat_view = CDSView(source = covid_cds, filters=[GroupFilter(column_name='Location',group='Jawa Barat')])
Daerah_Istimewa_Yogyakarta_view = CDSView(source = covid_cds, filters=[GroupFilter(column_name='Location',group='Daerah Istimewa Yogyakarta')])
Riau_view = CDSView(source = covid_cds, filters=[GroupFilter(column_name='Location',group='Riau')])
Banten_view= CDSView(source = covid_cds, filters=[GroupFilter(column_name='Location',group='Banten')])
Kalimantan_Timur_view = CDSView(source = covid_cds, filters=[GroupFilter(column_name='Location',group='Kalimantan Timur')])


# Create and configure the figure
fig_new_cases = figure(x_axis_type='datetime',
           plot_height=400, plot_width=800,
           title='Visualisasi Covid',
           x_axis_label='Date', y_axis_label='New Cases')

fig_active = figure(x_axis_type='datetime',
           plot_height=400, plot_width=800,
           title='Visualisasi Covid',
           x_axis_label='Date', y_axis_label='Total Active Cases')

fig_dead = figure(x_axis_type='datetime',
           plot_height=400, plot_width=800,
           title='Visualisasi Covid',
           x_axis_label='Date', y_axis_label='Total Deaths')

# Connect to and draw the data

# fig active cases
fig_new_cases.step('Date', 'New_Cases', 
              color='red', legend_label='DKI Jakarta',
              source=covid_cds, view=DKI_Jakarta_view)
fig_new_cases.step('Date', 'New_Cases', 
              color='orange', legend_label='Jawa Barat',
              source=covid_cds, view=Jawa_Barat_view)
fig_new_cases.step('Date', 'New_Cases', 
              color='blue', legend_label='Daerah_Istimewa_Yogyakarta',
              source=covid_cds, view=Daerah_Istimewa_Yogyakarta_view)
fig_new_cases.step('Date', 'New_Cases', 
              color='green', legend_label='Riau',
              source=covid_cds, view=Riau_view)
fig_new_cases.step('Date', 'New_Cases', 
              color='purple', legend_label='Banten',
              source=covid_cds, view=Banten_view)
fig_new_cases.step('Date', 'New_Cases', 
              color='yellow', legend_label='Kalimantan Timur',
              source=covid_cds, view=Kalimantan_Timur_view)

# fig active cases
fig_active.step('Date', 'Total_Active_Cases', 
              color='red', legend_label='DKI Jakarta',
              source=covid_cds, view=DKI_Jakarta_view)
fig_active.step('Date', 'Total_Active_Cases', 
              color='orange', legend_label='Jawa Barat',
              source=covid_cds, view=Jawa_Barat_view)
fig_active.step('Date', 'Total_Active_Cases', 
              color='blue', legend_label='Daerah_Istimewa_Yogyakarta',
              source=covid_cds, view=Daerah_Istimewa_Yogyakarta_view)
fig_active.step('Date', 'Total_Active_Cases', 
              color='green', legend_label='Riau',
              source=covid_cds, view=Riau_view)
fig_active.step('Date', 'Total_Active_Cases', 
              color='purple', legend_label='Banten',
              source=covid_cds, view=Banten_view)
fig_active.step('Date', 'Total_Active_Cases', 
              color='yellow', legend_label='Kalimantan Timur',
              source=covid_cds, view=Kalimantan_Timur_view)

# fig Deaths
fig_dead.step('Date', 'Total_Deaths', 
              color='red', legend_label='DKI Jakarta',
              source=covid_cds, view=DKI_Jakarta_view)
fig_dead.step('Date', 'Total_Deaths', 
              color='orange', legend_label='Jawa Barat',
              source=covid_cds, view=Jawa_Barat_view)
fig_dead.step('Date', 'Total_Deaths', 
              color='blue', legend_label='Daerah_Istimewa_Yogyakarta',
              source=covid_cds, view=Daerah_Istimewa_Yogyakarta_view)
fig_dead.step('Date', 'Total_Deaths', 
              color='green', legend_label='Riau',
              source=covid_cds, view=Riau_view)
fig_dead.step('Date', 'Total_Deaths', 
              color='purple', legend_label='Banten',
              source=covid_cds, view=Banten_view)
fig_dead.step('Date', 'Total_Deaths', 
              color='yellow', legend_label='Kalimantan Timur',
              source=covid_cds, view=Kalimantan_Timur_view)

# Format the tooltip
tooltips_new_cases = [
            ('Location','@Location'),
            ('New Cases', '@New_Cases'),
            ]
tooltips_active = [
            ('Location','@Location'),
            ('Total Active Cases', '@Total_Active_Cases'),
           ]

tooltips_dead = [
            ('Location','@Location'),
            ('Total Deaths', '@Total_Deaths'),
            ]


# Add the HoverTool to the figure
fig_new_cases.add_tools(HoverTool(tooltips=tooltips_dead))
fig_active.add_tools(HoverTool(tooltips=tooltips_active))
fig_dead.add_tools(HoverTool(tooltips=tooltips_new_cases))

#menu dropdown
# menu = [("Total Cases","fig_active"),("Deaths","fig_dead")]
# dropdown = Dropdown(button_type = "success", menu = menu)
# dropdown.js_on_event("menu_item_click", CustomJS(code="console.log('dropdown:'+this.item, this.toString())"))

# dropdown
panel_new_cases = Panel(child = fig_new_cases, title='New Cases')
panel_active = Panel(child = fig_active, title='Active Cases')
panel_dead = Panel(child = fig_dead, title='Deaths')

#assign tabs
tabs = Tabs(tabs=[panel_new_cases, panel_active, panel_dead])

# Visualize
show(tabs)